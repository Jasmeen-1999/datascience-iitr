Tower of Hanoi 
The Tower of Hanoi is a mathematical puzzle that involves moving disks from one peg to another. It's also known as the Tower of Brahma, the problem of Benares Temple, or Lucas' Tower. 

How to play
Start with all the disks stacked on one peg, from largest to smallest. 
Move the disks one at a time. 
Only move the top disk from a stack. 
Don't put a larger disk on top of a smaller disk. 
Move all the disks to one of the other pegs. 

History
The puzzle was invented in 1883 by French mathematician Ã‰douard Lucas. He was inspired by a legend about a Hindu temple where priests were given the task of moving 64 gold disks. 

How to solve
The Tower of Hanoi puzzle can be solved using recursion. Recursion is a process where a function calls itself directly or indirectly.

Q: Two lines x1 --> x2 and x3 --> x4, print True, if overlapping or touching otherwise print False
ans: def are_overlapping(x1, x2, x3, x4):
    # Write your logic
    return True or False
Ans:def are_overlapping(x1, x2, x3, x4):
        mx1 = max(x1,x2)
        mn1 = min(x1,x2)
        mx2 = max(x3,x4)
        mn2 = min(x3,x4)
        line1 = list(range(mn1,mx1+1))
        line2 = list(range(mn2,mx2+1))
        new_list = []
        for element in line1:
            if element in line2:
                new_list.append(element)
        print(new_list)
        if new_list == []:
            return False
        else:
            return True
